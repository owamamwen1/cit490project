{
    "swagger": "2.0",
    "info": {
      "description": "The api service - food donation management \n \n ******Member ****** \n Owamamwen Ogunniyi",
      "version": "1.0.0",
      "title": "CIT490 Senior Project",
      "contact": {
        "email": "owamamwen@outlook.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "owas-senior-project.onrender.com",
    "basePath": "/",
    "tags": [
      {
        "name": "logout",
        "description": "Logs out current logged"
      },
      {
        "name": "login-credentials",
        "description": "These API endpoints are designed for Login user account"
      },
      {
        "name": "register-user",
        "description": "Operations about user"
      },
      {
        "name": "donor",
        "description": "Operations about user donor contents"
      },
      {
        "name": "fdm-category",
        "description": "Operations about donor category"
      }
    ],
    "schemes": ["https"],
    "paths": {
      "/logout": {
        "get": {
          "tags": ["logout"],
          "summary": "Logs out current logged in user session",
          "operationId": "logoutUser",
          "produces": ["application/json"],
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": ["login-credentials"],
          "summary": "Login user",
          "description": "This is for when a user creates an account.",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/login"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successfully created user",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "example": "Web development"
                  }
                }
              }
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "tags": ["register-user"],
          "summary": "Create user",
          "description": "This is for when a user creates an account.",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/register-user"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successfully created user",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "example": "Web development"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": ["register-user"],
          "summary": "Get user by user id",
          "operationId": "getUserByName",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The name that needs to be fetched.",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/register-user"
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": ["register-user"],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "id that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/update-user"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully modified user"
            },
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["register-user"],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "id that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/delete-user"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deleted user"
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/donors": {
        "get": {
          "tags": ["donor"],
          "summary": "Get all donor",
          "operationId": "getAllUsers",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "Array",
                "$ref": "#/definitions/donor"
              }
            },
            "500": {
              "description": "Error occurred"
            }
          }
        },
        "post": {
          "tags": ["donor"],
          "summary": "Create new donor",
          "description": "This is for when a user creates an account.",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/donor"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successfully created new donor",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "example": "Web development"
                  }
                }
              }
            }
          }
        }
      },
      "/donors/{id}": {
        "get": {
          "tags": ["donor"],
          "summary": "Get donor by id",
          "operationId": "getUserByName",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The name that needs to be fetched.",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/donor"
              }
            },
            "400": {
              "description": "Invalid donor id supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": ["donor"],
          "summary": "Updated user donor",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "id that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/donor"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully modified user"
            },
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["donor"],
          "summary": "Delete user donor",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "id that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/delete-donor"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deleted user"
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/categories": {
        "get": {
          "tags": ["fdm-category"],
          "summary": "Get all food category",
          "operationId": "getAllFoodCat",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "Array",
                "$ref": "#/definitions/fdm-category"
              }
            },
            "500": {
              "description": "Error occurred"
            }
          }
        },
        "post": {
          "tags": ["fdm-category"],
          "summary": "Create new category",
          "description": "This is for when a user create category.",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created new fdm categry",
              "required": true,
              "schema": {
                "$ref": "#/definitions/fdm-category"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successfully created new post",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "example": "Web development"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:pets": "modify pets in your account",
          "read:pets": "read your pets"
        }
      }
    },
    "definitions": {
      "login": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "register-user": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "update-user": {
        "type": "object",
        "required": ["userId","username"],
        "properties": {
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "delete-user": {
        "type": "object",
        "required": ["username"],
        "properties": {
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "donor": {
        "type": "object",
        "required": ["username", "title", "desc","status"],
        "properties": {
          "username": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "categories": {
            "type": "object"
          }
        }
      },
      "delete-donor": {
        "type": "object",
        "required": ["username"],
        "properties": {
          "username": {
            "type": "string"
          }
        }
      },
      "fdm-category": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
  
